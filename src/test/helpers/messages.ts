// new TextEncoder().encode(data)
// new TextDecoder().decode(new TextEncoder().encode(data))

// Content-Length: 270
// Content-Type: application/vscode-jsonrpc; charset=utf8

// {"id":0,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"referencesProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"xworkspaceReferencesProvider":true,"xdefinitionProvider":true}},"jsonrpc":"2.0"}
let INIT_BYTES = [67,111,110,116,101,110,116,45,76,101,110,103,116,104,58,32,50,55,48,13,10,67,111,110,116,101,110,116,45,84,121,112,101,58,32,97,112,112,108,105,99,97,116,105,111,110,47,118,115,99,111,100,101,45,106,115,111,110,114,112,99,59,32,99,104,97,114,115,101,116,61,117,116,102,56,13,10,13,10,123,34,105,100,34,58,48,44,34,114,101,115,117,108,116,34,58,123,34,99,97,112,97,98,105,108,105,116,105,101,115,34,58,123,34,116,101,120,116,68,111,99,117,109,101,110,116,83,121,110,99,34,58,49,44,34,104,111,118,101,114,80,114,111,118,105,100,101,114,34,58,116,114,117,101,44,34,100,101,102,105,110,105,116,105,111,110,80,114,111,118,105,100,101,114,34,58,116,114,117,101,44,34,114,101,102,101,114,101,110,99,101,115,80,114,111,118,105,100,101,114,34,58,116,114,117,101,44,34,100,111,99,117,109,101,110,116,83,121,109,98,111,108,80,114,111,118,105,100,101,114,34,58,116,114,117,101,44,34,119,111,114,107,115,112,97,99,101,83,121,109,98,111,108,80,114,111,118,105,100,101,114,34,58,116,114,117,101,44,34,120,119,111,114,107,115,112,97,99,101,82,101,102,101,114,101,110,99,101,115,80,114,111,118,105,100,101,114,34,58,116,114,117,101,44,34,120,100,101,102,105,110,105,116,105,111,110,80,114,111,118,105,100,101,114,34,58,116,114,117,101,125,125,44,34,106,115,111,110,114,112,99,34,58,34,50,46,48,34,125];
// let buffer = new Buffer(INIT_BYTES);
let INIT = new Buffer(INIT_BYTES).toString();


// Content-Length: 479
// Content-Type: application/vscode-jsonrpc; charset=utf8

// {"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/mbana/go/src/github.com/sourcegraph/go-langserver/langservermodes/websocket.go","diagnostics":[{"range":{"start":{"line":68,"character":24},"end":{"line":68,"character":27}},"severity":1,"source":"go","message":"cannot use rwc (variable of type webSocketReadWriteCloser) as github.com/sourcegraph/jsonrpc2.ObjectStream value in argument to jsonrpc2.NewConn: missing method ReadObject"}]},"jsonrpc":"2.0"}Content-Length: 324
// Content-Type: application/vscode-jsonrpc; charset=utf8

// {"id":1,"result":{"contents":[{"language":"go","value":"type ConnOpt func(*Conn)"},{"language":"markdown","value":"ConnOpt is the type of function that can be passed to NewConn to customize the Conn before it is created. \n\n"}],"range":{"start":{"line":28,"character":47},"end":{"line":28,"character":54}}},"jsonrpc":"2.0"}
let MANY_BYTES = [67,111,110,116,101,110,116,45,76,101,110,103,116,104,58,32,52,55,57,13,10,67,111,110,116,101,110,116,45,84,121,112,101,58,32,97,112,112,108,105,99,97,116,105,111,110,47,118,115,99,111,100,101,45,106,115,111,110,114,112,99,59,32,99,104,97,114,115,101,116,61,117,116,102,56,13,10,13,10,123,34,109,101,116,104,111,100,34,58,34,116,101,120,116,68,111,99,117,109,101,110,116,47,112,117,98,108,105,115,104,68,105,97,103,110,111,115,116,105,99,115,34,44,34,112,97,114,97,109,115,34,58,123,34,117,114,105,34,58,34,102,105,108,101,58,47,47,47,85,115,101,114,115,47,109,98,97,110,97,47,103,111,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,47,115,111,117,114,99,101,103,114,97,112,104,47,103,111,45,108,97,110,103,115,101,114,118,101,114,47,108,97,110,103,115,101,114,118,101,114,109,111,100,101,115,47,119,101,98,115,111,99,107,101,116,46,103,111,34,44,34,100,105,97,103,110,111,115,116,105,99,115,34,58,91,123,34,114,97,110,103,101,34,58,123,34,115,116,97,114,116,34,58,123,34,108,105,110,101,34,58,54,56,44,34,99,104,97,114,97,99,116,101,114,34,58,50,52,125,44,34,101,110,100,34,58,123,34,108,105,110,101,34,58,54,56,44,34,99,104,97,114,97,99,116,101,114,34,58,50,55,125,125,44,34,115,101,118,101,114,105,116,121,34,58,49,44,34,115,111,117,114,99,101,34,58,34,103,111,34,44,34,109,101,115,115,97,103,101,34,58,34,99,97,110,110,111,116,32,117,115,101,32,114,119,99,32,40,118,97,114,105,97,98,108,101,32,111,102,32,116,121,112,101,32,119,101,98,83,111,99,107,101,116,82,101,97,100,87,114,105,116,101,67,108,111,115,101,114,41,32,97,115,32,103,105,116,104,117,98,46,99,111,109,47,115,111,117,114,99,101,103,114,97,112,104,47,106,115,111,110,114,112,99,50,46,79,98,106,101,99,116,83,116,114,101,97,109,32,118,97,108,117,101,32,105,110,32,97,114,103,117,109,101,110,116,32,116,111,32,106,115,111,110,114,112,99,50,46,78,101,119,67,111,110,110,58,32,109,105,115,115,105,110,103,32,109,101,116,104,111,100,32,82,101,97,100,79,98,106,101,99,116,34,125,93,125,44,34,106,115,111,110,114,112,99,34,58,34,50,46,48,34,125,67,111,110,116,101,110,116,45,76,101,110,103,116,104,58,32,51,50,52,13,10,67,111,110,116,101,110,116,45,84,121,112,101,58,32,97,112,112,108,105,99,97,116,105,111,110,47,118,115,99,111,100,101,45,106,115,111,110,114,112,99,59,32,99,104,97,114,115,101,116,61,117,116,102,56,13,10,13,10,123,34,105,100,34,58,49,44,34,114,101,115,117,108,116,34,58,123,34,99,111,110,116,101,110,116,115,34,58,91,123,34,108,97,110,103,117,97,103,101,34,58,34,103,111,34,44,34,118,97,108,117,101,34,58,34,116,121,112,101,32,67,111,110,110,79,112,116,32,102,117,110,99,40,42,67,111,110,110,41,34,125,44,123,34,108,97,110,103,117,97,103,101,34,58,34,109,97,114,107,100,111,119,110,34,44,34,118,97,108,117,101,34,58,34,67,111,110,110,79,112,116,32,105,115,32,116,104,101,32,116,121,112,101,32,111,102,32,102,117,110,99,116,105,111,110,32,116,104,97,116,32,99,97,110,32,98,101,32,112,97,115,115,101,100,32,116,111,32,78,101,119,67,111,110,110,32,116,111,32,99,117,115,116,111,109,105,122,101,32,116,104,101,32,67,111,110,110,32,98,101,102,111,114,101,32,105,116,32,105,115,32,99,114,101,97,116,101,100,46,32,92,110,92,110,34,125,93,44,34,114,97,110,103,101,34,58,123,34,115,116,97,114,116,34,58,123,34,108,105,110,101,34,58,50,56,44,34,99,104,97,114,97,99,116,101,114,34,58,52,55,125,44,34,101,110,100,34,58,123,34,108,105,110,101,34,58,50,56,44,34,99,104,97,114,97,99,116,101,114,34,58,53,52,125,125,125,44,34,106,115,111,110,114,112,99,34,58,34,50,46,48,34,125];
let MANY = new Buffer(MANY_BYTES).toString();

let TestMessages = {
	INIT,
	MANY,
};

export { TestMessages };
